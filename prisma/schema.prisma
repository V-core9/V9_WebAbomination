datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id        Int      @id @default(autoincrement())
  slug      String?  @unique
  title     String
  content   String?
  published Boolean?  @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  created   DateTime @default(now())
  updated   DateTime @default(now())
  revision  Boolean? @default(false)
  authorId  Int?
  renderMode String @default("html")
}

model Page {
  id        Int      @id @default(autoincrement())
  slug      String?  @unique
  title     String
  content   String?
  published Boolean?  @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  created   DateTime @default(now())
  updated   DateTime @default(now())
  revision  Boolean? @default(false)
  authorId  Int?
  renderMode String @default("html")
}

model Form {
  id Int @id @default(autoincrement())
  slug String? @unique
  title String
  content String
  published Boolean? @default(false)
  author User? @relation(fields: [authorId], references: [id])
  authorId Int?
  created DateTime @default(now())
  updated DateTime @default(now())
  formResponses FormResponse[]
}

model FormResponse {
  id Int @id @default(autoincrement())
  form Form? @relation(fields: [formId], references: [id])
  formId Int?
  content String
  created DateTime @default(now())
}

model Role {
  id Int @id @default(autoincrement())
  name String
  users User[]
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  username  String?
  password  String
  salt String
  created   DateTime @default(now())
  updated   DateTime @default(now())
  verified Boolean? @default(false)
  roleId Int?
  role Role? @relation(fields: [roleId], references: [id])
  pages Page[]
  posts Post[]
  forms Form[]
}
